{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "04030752eaa843f886912bd2dece80a02efec264467b77e1e961f2bce53b0ce4": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_sqs as sqs",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.SQS;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.sqs.*;",
          "version": "1"
        },
        "$": {
          "source": "import * as sqs from '@aws-cdk/aws-sqs';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sqs"
        },
        "field": {
          "field": "markdown",
          "line": 25
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as sqs from '@aws-cdk/aws-sqs';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "9244b20e179b08a6165e503b4f37fe238bb53ea973a77eaa53c67fd7ef6ea76e": {
      "translations": {
        "python": {
          "source": "sqs.Queue(self, \"Queue\")",
          "version": "1"
        },
        "csharp": {
          "source": "new Queue(this, \"Queue\");",
          "version": "1"
        },
        "java": {
          "source": "new Queue(this, \"Queue\");",
          "version": "1"
        },
        "$": {
          "source": "new sqs.Queue(this, 'Queue');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sqs"
        },
        "field": {
          "field": "markdown",
          "line": 34
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sqs.Queue"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew sqs.Queue(this, 'Queue');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 2,
        "104": 1,
        "194": 1,
        "197": 1,
        "226": 1
      },
      "fqnsFingerprint": "870bcb1363796f44224d06f53968b2a4dc5fd6cf6eb51a67fcb9b0756d2ef511"
    },
    "182a518d6827162ad04acdfbab5ece9d32be7732a98e5570ffec432f7a979352": {
      "translations": {
        "python": {
          "source": "# Use managed key\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS_MANAGED\n)\n\n# Use custom key\nmy_key = kms.Key(self, \"Key\")\n\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS,\n    encryption_master_key=my_key\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Use managed key\n// Use managed key\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS_MANAGED\n});\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS,\n    EncryptionMasterKey = myKey\n});",
          "version": "1"
        },
        "java": {
          "source": "// Use managed key\n// Use managed key\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS_MANAGED)\n        .build();\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS)\n        .encryptionMasterKey(myKey)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-sqs"
        },
        "field": {
          "field": "markdown",
          "line": 44
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueEncryption",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS_MANAGED",
        "@aws-cdk/aws-sqs.QueueProps"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 3,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "591a2a38fc24ed355ccee4414d538d82f286021d18c50d495d129a4b9d2a4af9"
    },
    "5b46573e96ad387bc4811fb95954a5d2c32502d5b3a9a2aca9d6cdafe7c0eec1": {
      "translations": {
        "python": {
          "source": "topic = sns.Topic(self, \"Topic\")\ndl_queue = sqs.Queue(self, \"DeadLetterQueue\",\n    queue_name=\"MySubscription_DLQ\",\n    retention_period=Duration.days(14)\n)\n\nsns.Subscription(self, \"Subscription\",\n    endpoint=\"endpoint\",\n    protocol=sns.SubscriptionProtocol.LAMBDA,\n    topic=topic,\n    dead_letter_queue=dl_queue\n)",
          "version": "1"
        },
        "csharp": {
          "source": "Topic topic = new Topic(this, \"Topic\");\nQueue dlQueue = new Queue(this, \"DeadLetterQueue\", new QueueProps {\n    QueueName = \"MySubscription_DLQ\",\n    RetentionPeriod = Duration.Days(14)\n});\n\nnew Subscription(this, \"Subscription\", new SubscriptionProps {\n    Endpoint = \"endpoint\",\n    Protocol = SubscriptionProtocol.LAMBDA,\n    Topic = topic,\n    DeadLetterQueue = dlQueue\n});",
          "version": "1"
        },
        "java": {
          "source": "Topic topic = new Topic(this, \"Topic\");\nQueue dlQueue = Queue.Builder.create(this, \"DeadLetterQueue\")\n        .queueName(\"MySubscription_DLQ\")\n        .retentionPeriod(Duration.days(14))\n        .build();\n\nSubscription.Builder.create(this, \"Subscription\")\n        .endpoint(\"endpoint\")\n        .protocol(SubscriptionProtocol.LAMBDA)\n        .topic(topic)\n        .deadLetterQueue(dlQueue)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const topic = new sns.Topic(this, 'Topic');\nconst dlQueue = new sqs.Queue(this, 'DeadLetterQueue', {\n  queueName: 'MySubscription_DLQ',\n  retentionPeriod: Duration.days(14),\n});\n\nnew sns.Subscription(this, 'Subscription', {\n  endpoint: 'endpoint',\n  protocol: sns.SubscriptionProtocol.LAMBDA,\n  topic,\n  deadLetterQueue: dlQueue,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sqs.Queue"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-sns.ITopic",
        "@aws-cdk/aws-sns.Subscription",
        "@aws-cdk/aws-sns.SubscriptionProps",
        "@aws-cdk/aws-sns.SubscriptionProtocol",
        "@aws-cdk/aws-sns.SubscriptionProtocol#LAMBDA",
        "@aws-cdk/aws-sns.Topic",
        "@aws-cdk/aws-sqs.IQueue",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as subscriptions from '@aws-cdk/aws-sns-subscriptions';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst topic = new sns.Topic(this, 'Topic');\nconst dlQueue = new sqs.Queue(this, 'DeadLetterQueue', {\n  queueName: 'MySubscription_DLQ',\n  retentionPeriod: Duration.days(14),\n});\n\nnew sns.Subscription(this, 'Subscription', {\n  endpoint: 'endpoint',\n  protocol: sns.SubscriptionProtocol.LAMBDA,\n  topic,\n  deadLetterQueue: dlQueue,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 20,
        "104": 3,
        "193": 2,
        "194": 6,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "282": 1
      },
      "fqnsFingerprint": "ffe889bd2c7b65b8c37e8322391b841ae3f7664ab80432cde804bb560452359a"
    },
    "a12bdb65eb082f2a609a9b14f1b5bae3bc65bccb08302ce44afa78d8a9a5c0d2": {
      "translations": {
        "python": {
          "source": "# Use managed key\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS_MANAGED\n)\n\n# Use custom key\nmy_key = kms.Key(self, \"Key\")\n\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS,\n    encryption_master_key=my_key\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Use managed key\n// Use managed key\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS_MANAGED\n});\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS,\n    EncryptionMasterKey = myKey\n});",
          "version": "1"
        },
        "java": {
          "source": "// Use managed key\n// Use managed key\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS_MANAGED)\n        .build();\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS)\n        .encryptionMasterKey(myKey)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sqs.QueueEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueEncryption",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS_MANAGED",
        "@aws-cdk/aws-sqs.QueueProps"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 3,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "591a2a38fc24ed355ccee4414d538d82f286021d18c50d495d129a4b9d2a4af9"
    },
    "27fcd574e62648b88418f50aa3760dcf4715a0c0c1b15b8c222efe9c5ea1d51c": {
      "translations": {
        "python": {
          "source": "# Use managed key\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS_MANAGED\n)\n\n# Use custom key\nmy_key = kms.Key(self, \"Key\")\n\nsqs.Queue(self, \"Queue\",\n    encryption=sqs.QueueEncryption.KMS,\n    encryption_master_key=my_key\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Use managed key\n// Use managed key\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS_MANAGED\n});\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nnew Queue(this, \"Queue\", new QueueProps {\n    Encryption = QueueEncryption.KMS,\n    EncryptionMasterKey = myKey\n});",
          "version": "1"
        },
        "java": {
          "source": "// Use managed key\n// Use managed key\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS_MANAGED)\n        .build();\n\n// Use custom key\nKey myKey = new Key(this, \"Key\");\n\nQueue.Builder.create(this, \"Queue\")\n        .encryption(QueueEncryption.KMS)\n        .encryptionMasterKey(myKey)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-sqs.QueueProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-sqs.Queue",
        "@aws-cdk/aws-sqs.QueueEncryption",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS",
        "@aws-cdk/aws-sqs.QueueEncryption#KMS_MANAGED",
        "@aws-cdk/aws-sqs.QueueProps"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport sqs = require('@aws-cdk/aws-sqs');\nimport kms = require('@aws-cdk/aws-kms');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Use managed key\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS_MANAGED,\n});\n\n// Use custom key\nconst myKey = new kms.Key(this, 'Key');\n\nnew sqs.Queue(this, 'Queue', {\n  encryption: sqs.QueueEncryption.KMS,\n  encryptionMasterKey: myKey,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 3,
        "193": 2,
        "194": 7,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "591a2a38fc24ed355ccee4414d538d82f286021d18c50d495d129a4b9d2a4af9"
    }
  }
}
